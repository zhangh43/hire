Please explain the semantic of the following SQL statement from MySQL, and the corresponding SQL results. You can use any resources.

1. Rollup(OLAP)
```
create table t1 (product varchar(32), country_id int not null, year int, profit int);
insert into t1  values ( 'Computer', 2,2000, 1200),
( 'TV', 1, 1999, 150),
( 'Calculator', 1, 1999,50),
( 'Computer', 1, 1999,1500),
( 'Computer', 1, 2000,1500),
( 'TV', 1, 2000, 150),
( 'TV', 2, 2000, 100),
( 'TV', 2, 2000, 100),
( 'Calculator', 1, 2000,75),
( 'Calculator', 2, 2000,75),
( 'TV', 1, 1999, 100),
( 'Computer', 1, 1999,1200),
( 'Computer', 2, 2000,1500),
( 'Calculator', 2, 2000,75),
( 'Phone', 3, 2003,10)
;
select product, country_id , year, sum(profit) from t1 group by product, country_id, year;
select product, country_id , year, sum(profit) from t1 group by product, country_id, year with rollup;
```

2. Lock. We have three separate connections. What will happens after each queries(query1 - query4)?

```
CREATE TABLE t1 ( f1 INTEGER ) ENGINE = innodb;
CREATE TABLE t2 ( f1 INTEGER );
CREATE VIEW v1 AS SELECT 1 FROM t1;

#Query 1 on connection con1:
LOCK TABLE t1 WRITE;

#Query 2 on connection con2:
SELECT * FROM v1;

#Query 3 on connection con3;
ALTER VIEW v1 AS SELECT 2 FROM t2;

#Query 4 on connection con1;
UNLOCK TABLES;
```

2. Isolation. The following SQL contains three SELECT statement, what's their output, and why?

```
CREATE TABLE t1 (s1 INT) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1),(2);

# Query on connection con1:
START TRANSACTION;
SELECT * FROM t1;
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;

# Query on connection con2:
START TRANSACTION;
INSERT INTO t1 VALUES (1000);
COMMIT;

# Query on connection con1:
SELECT * FROM t1;
COMMIT;

START TRANSACTION;
SELECT * FROM t1;
COMMIT;
```
